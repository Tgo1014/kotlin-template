/**
 * OpenDota API
 * # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.
 *
 * OpenAPI spec version: 17.6.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package techprague.nodes.dk.data.apis

import retrofit2.Call
import retrofit2.http.GET
import retrofit2.http.Path
import techprague.nodes.dk.data.models.Inline_response_200_14
import techprague.nodes.dk.data.models.Inline_response_200_26
import techprague.nodes.dk.data.models.Inline_response_200_27
import techprague.nodes.dk.data.models.Inline_response_200_28

interface TeamsApi {

    /**
     * GET /teams
     * Get team data
     * @return Call&lt;Array&lt;Any&gt;&gt;
     */
    @GET("teams")
    fun teamsGet(): Call<Array<Any>>

    /**
     * GET /teams/{team_id}
     * Get data for a team
     * @param teamId Team ID (required)
     * @return Call&lt;Inline_response_200_26&gt;
     */
    @GET("teams/{team_id}")
    fun teamsTeamIdGet(@Path("team_id") teamId: Int): Call<Inline_response_200_26>

    /**
     * GET /teams/{team_id}/heroes
     * Get heroes for a team
     * @param teamId Team ID (required)
     * @return Call&lt;Inline_response_200_28&gt;
     */
    @GET("teams/{team_id}/heroes")
    fun teamsTeamIdHeroesGet(@Path("team_id") teamId: Int): Call<Inline_response_200_28>

    /**
     * GET /teams/{team_id}/matches
     * Get matches for a team
     * @param teamId Team ID (required)
     * @return Call&lt;Inline_response_200_14&gt;
     */
    @GET("teams/{team_id}/matches")
    fun teamsTeamIdMatchesGet(@Path("team_id") teamId: Int): Call<Inline_response_200_14>

    /**
     * GET /teams/{team_id}/players
     * Get players who have played for a team
     * @param teamId Team ID (required)
     * @return Call&lt;Inline_response_200_27&gt;
     */
    @GET("teams/{team_id}/players")
    fun teamsTeamIdPlayersGet(@Path("team_id") teamId: Int): Call<Inline_response_200_27>
}
