apply plugin: 'com.android.application'
apply plugin: 'dk.nstack.translation.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'dk.nodes.ci.bitrise'
apply plugin: 'kotlin-kapt'

translation {
    appId = "5Rg3muDHQL8J19lb6sZzjD6ANSOrigg5x55u"
    apiKey = "htCPriWP9yoaeoHHnPgYKYw68BoejYhJnR8w"
    acceptHeader = "da-DK"
    autoRunUpdate = true
}

bitrise {
    defaultDeployMode = "release|debug"
    branchMode = true
}
androidExtensions {
    experimental = true
}
android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 99
        versionName "4.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        manifestPlaceholders = [
                appId : translation.appId,
                apiKey: translation.apiKey
        ]

        buildConfigField "Long", "INPUT_VALIDATION_DELAY", "1800L"

        // flags for disabling various functionality for the different betas
        buildConfigField "Boolean", "ENABLE_PROFILE_PICTURE", "false"
        buildConfigField "Boolean", "ENABLE_SENDERS", "false"
        buildConfigField "Boolean", "ENABLE_UPLOADS", "true"
        buildConfigField "Boolean", "ENABLE_DOCUMENT_ACTIONS", "false"
        buildConfigField "Boolean", "ENABLE_FOLDERS_ACTIONS", "false"
        buildConfigField "Boolean", "ENABLE_PAYMENT", "false"
        buildConfigField "Boolean", "ENABLE_EKEY", "true"
        buildConfigField "Boolean", "ENABLE_CHANNEL_REORDERING", "false"
        buildConfigField "Boolean", "ENABLE_PROFILE_DATA_VERIFICATION", "true"
        buildConfigField "Boolean", "ENABLE_SHARES", "false"
        buildConfigField "Boolean", "ENABLE_REPLY", "false"
        buildConfigField "Boolean", "ENABLE_SIGN", "true"
        buildConfigField "Boolean", "ENABLE_FINGERPRINT_NONVERIFIED", "false"
        buildConfigField "Boolean", "ENABLE_BETA_DISCLAIMER", "true"
    }

    signingConfigs {
        swedishDebug {
            keyAlias 'swedishDebug'
            keyPassword 'RR3UC8zaFegE2TJQhkDdC5TGhTZKRa'
            storeFile file('./keys/swedishDebug')
            storePassword 'RR3UC8zaFegE2TJQhkDdC5TGhTZKRa'
        }
        danishDebug {
            keyAlias 'danishDebug'
            keyPassword 'TseJ4a4k4n92kXjjZNcspUwd7Vw2nF'
            storeFile file('./keys/danishDebug')
            storePassword 'TseJ4a4k4n92kXjjZNcspUwd7Vw2nF'
        }
        norwegianDebug {
            keyAlias 'norwegianDebug'
            keyPassword 'WK3cVLvpUDDgN2p3N8QxRkwWM4BTBT'
            storeFile file('./keys/norwegianDebug')
            storePassword 'WK3cVLvpUDDgN2p3N8QxRkwWM4BTBT'
        }
        debug {
            keyAlias 'debug'
            keyPassword 'ssY4tz324b2jDmnCBuTMyY4Fx989XR'
            storeFile file('./keys/debug')
            storePassword 'ssY4tz324b2jDmnCBuTMyY4Fx989XR'
        }
        swedishProduction {
            keyAlias 'swedish'
            keyPassword 'WbjQfkYrjdHwx5Md49TWKSZqEkAEHB'
            storeFile file('./keys/swedish')
            storePassword 'WbjQfkYrjdHwx5Md49TWKSZqEkAEHB'
        }
        danishProduction {
            keyAlias 'danish'
            keyPassword 'zmXRagTN3SX96ZxPdLcY88qx5H7fym'
            storeFile file('./keys/danish')
            storePassword 'zmXRagTN3SX96ZxPdLcY88qx5H7fym'
        }
        norwegianProduction {
            keyAlias 'norwegian'
            keyPassword 'aMHG8ryp627E4gnSZRJr9j3uqxpnt9'
            storeFile file('./keys/norwegian')
            storePassword 'aMHG8ryp627E4gnSZRJr9j3uqxpnt9'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig null

            productFlavors.all { flavor ->
                switch (flavor.name) {
                    case "danish":
                        flavor.signingConfig signingConfigs.danishDebug
                        break
                    case "swedish":
                        flavor.signingConfig signingConfigs.swedishDebug
                        break
                    case "norwegian":
                        flavor.signingConfig signingConfigs.norwegianDebug
                        break
                }
            }

        }

        release {
            //debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            productFlavors.all { flavor ->
                switch (flavor.name) {
                    case "danish":
                        flavor.signingConfig signingConfigs.danishProduction
                        break
                    case "swedish":
                        flavor.signingConfig signingConfigs.swedishProduction
                        break
                    case "norwegian":
                        flavor.signingConfig signingConfigs.norwegianProduction
                        break
                }
            }
        }

        applicationVariants.all { variant ->
            def flavor = variant.getMergedFlavor()
            switch (variant.name) {
                case "danishDebug":
                    flavor.manifestPlaceholders.put("HOCKEYAPP_APP_ID", "5787fa63d0a0404bbdcd93456360db79")
                    break
                case "swedishDebug":
                    flavor.manifestPlaceholders.put("HOCKEYAPP_APP_ID", "74e3a5f6d05c4a02a17697bbb11d8af0")
                    break
                case "norwegianDebug":
                    flavor.manifestPlaceholders.put("HOCKEYAPP_APP_ID", "e323e110faa049b787027ea5b0a93cec")
                    break
            }
        }
    }

    productFlavors {
        danish {
            dimension "default"

            applicationId "dk.eboks.app"
            versionName '4.0.0'

            hockeyAppId = "c420719986b14750af457e6ac686fb5d"
            hockeyAppIdStaging = "5787fa63d0a0404bbdcd93456360db79"

            buildConfigField "String", "mode", '"danish"'
            buildConfigField "String", "locale", '"da-DK"'

            manifestPlaceholders = [
                    HOCKEYAPP_APP_ID: hockeyAppId,
                    APP_NAME        : "e-Boks.dk"
            ]
        }
        swedish {
            dimension "default"

            applicationId "se.eboks.app"
            versionName '4.0.0'

            hockeyAppId = "6cde34b0caee42cd938ed52b8e461b97"
            hockeyAppIdStaging = "74e3a5f6d05c4a02a17697bbb11d8af0"

            buildConfigField "String", "mode", '"swedish"'
            buildConfigField "String", "locale", '"sv-SE"'

            manifestPlaceholders = [
                    HOCKEYAPP_APP_ID: hockeyAppId,
                    APP_NAME        : "e-Boks.se"
            ]
        }
        norwegian {
            dimension "default"

            applicationId "no.eboks.app"
            versionName '4.0.0'

            hockeyAppId = "7ae0dc6ff4a945d18f4ec28cbf14f385"
            hockeyAppIdStaging = "e323e110faa049b787027ea5b0a93cec"

            buildConfigField "String", "mode", '"norwegian"'
            buildConfigField "String", "locale", '"nb-NO"'

            manifestPlaceholders = [
                    HOCKEYAPP_APP_ID: hockeyAppId,
                    APP_NAME        : "e-Boks.no"
            ]
        }

    }
}

repositories {
    mavenLocal()
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_core_version", {
        exclude group: "com.android.support", module: "support-annotations"
    })

    // uncomment me if using multidex
    //implementation "com.android.support:multidex:$multidex_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:recyclerview-v7:$support_library_version"
    implementation "com.android.support:design:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"

    implementation "com.daimajia.swipelayout:library:1.2.0@aar"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "net.hockeyapp.android:HockeySDK:$hockey_sdk_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation 'org.greenrobot:eventbus:3.0.0'

    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")

    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version") {
        exclude module: "retrofit:$retrofit_version"
    }

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "dk.nodes.nstack:nstack-kotlin:2.1.2"

    implementation "dk.nodes.arch:base:$nodes_arch_version"
    //implementation "dk.nodes.arch:base:LOCAL"
    implementation 'dk.nodes.filepicker:filepicker:2.0.+'

    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    implementation "org.apache.commons:commons-lang3:$commons_lang3_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.l4digital.fastscroll:fastscroll:1.0.4"

    implementation 'com.rengwuxian.materialedittext:library:2.1.4'

    // Encryption Lib
//    implementation 'dk.nodes.locksmith:core:1.1.1'
    implementation project(':locksmith')

    // Barcode Generation Library
    implementation 'com.google.zxing:core:3.3.0'

    // circular progress
    implementation 'com.mikhaellopez:circularprogressbar:2.0.0'

    // cookie jar for okhttp
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    // Testing
    testImplementation "junit:junit:$junit_version"
    // required if you want to use Mockito for unit tests
    testImplementation "org.mockito:mockito-core:$mockito_version"
    // required if you want to use Mockito for Android tests
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    //For Espresso UI testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$espresso_core_version")
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espresso_core_version"
}
